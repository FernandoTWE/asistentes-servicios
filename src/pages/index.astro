---
import Layout from '../layouts/Layout.astro';
import { ServiceSelector } from '../components/Services/ServiceSelector';
import { LanguageSelector } from '../components/Layout/LanguageSelector';
import { ChatWindow } from '../components/Chat/ChatWindow';
import { directusAPI } from '../lib/api/directus';

// Obtener servicios y usuarios de Directus
const [servicesResponse, usersResponse] = await Promise.all([
  directusAPI.getServices(),
  directusAPI.getUsers()
]);

const services = servicesResponse.data || [];
const users = usersResponse.data || [];
const initialService = services[0] || null;

// Usuario por defecto o el primero de la lista
const defaultUser = users[0] || { id: null, name: 'Invitado' };
---

<Layout title="Chat">
  <head>
    <style>
      .sigma-btn {
        border-radius: 1.25rem !important;
      }
      .sigma-minimized-img {
        border: solid 2px !important;
        color: blue !important;
      }
    </style>
    <script src="https://sigmafractalia.nuvetoapps.com/dist/js/sigma-chat-v2.js" data-fab></script>
  </head>

  <main class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
      <div class="mb-6 flex flex-wrap gap-4 items-end">
        <div class="flex-1 min-w-[200px]">
          <label class="block text-sm font-medium text-gray-700 mb-1">
            Servicio
          </label>
          <ServiceSelector services={services} client:load />
        </div>
        
        <div class="w-32">
          <label class="block text-sm font-medium text-gray-700 mb-1">
            Idioma
          </label>
          <LanguageSelector client:load />
        </div>

        <div class="w-48">
          <label class="block text-sm font-medium text-gray-700 mb-1">
            Usuario
          </label>
          <select
            id="userId"
            name="userId"
            class="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
          >
            {users.map(user => (
              <option value={user.id}>{user.name}</option>
            ))}
          </select>
        </div>
      </div>

      <ChatWindow 
        client:load 
        initialService={initialService}
      />
    </div>
  </main>

  <script>
    // Estado global
    let currentService = null;
    let currentLanguage = 'es';
    let currentUserId = null;

    // Inicializar estado desde localStorage
    if (typeof window !== 'undefined') {
      currentLanguage = localStorage.getItem('selectedLanguage') || 'es';
      
      // Inicializar selector de usuario
      const userSelect = document.getElementById('userId');
      if (userSelect) {
        currentUserId = userSelect.value;
        userSelect.addEventListener('change', (e) => {
          currentUserId = e.target.value;
          localStorage.setItem('selectedUserId', currentUserId);
          const userName = e.target.options[e.target.selectedIndex].text;
          window.dispatchEvent(new CustomEvent('userNameChange', { detail: userName }));
        });
      }
    }

    // Función para abrir el chat de Sigma
    function openChat() {
      if (typeof SigmaChat === 'undefined') {
        console.warn('SigmaChat no está disponible');
        return;
      }

      if (SigmaChat.isOpen && SigmaChat.isOpen()){
        if(!confirm('Si empiezas una nueva conversación, la conversación actual se cancelará. ¿Quieres empezar una nueva conversación?')){
          return;
        }
        if (typeof SigmaChat.closeChat === 'function') {
          SigmaChat.closeChat();
        }
      }

      const userSelect = document.getElementById('userId');
      const userName = userSelect ? userSelect.options[userSelect.selectedIndex].text : 'Invitado';

      document.documentElement.style.setProperty('--sigma-primary-color', '#0e1b64');
      document.documentElement.style.setProperty('--sigma-secondary-color', '#36b3ed');
      document.documentElement.style.setProperty('--sigma-background-chat', '#fff');
      document.documentElement.style.setProperty('--sigma-font-color-popup', '#fff');
      document.documentElement.style.setProperty('--sigma-start-chat-color', '#36b3ed');
      document.documentElement.style.setProperty('--sigma-start-chat-hover-color', '#0e1b64');
      document.documentElement.style.setProperty('--sigma-font-size', '16px');
      document.documentElement.style.setProperty('--sigma-font-family', 'Arial, Helvetica, Sans-serif');

      try {
        new SigmaChat({
          id: 'fractalia-v3',
          title: 'Fractalia',
          headline: '¿En qué podemos ayudarte?',
          logo: {
            src: "https://fractaliasystems.com/wp-content/uploads/2018/09/logo_grupo_fractalia.png",
            height: "80px"
          },
          icon: {
            src: "https://fractaliasystems.com/wp-content/uploads/2018/09/favicon3.png"
          },
          dateFormat: 'MMMM Do YYYY, hh:mm',
          drawFAB: false,
          autoMessage: null,
          confirmMessage: {
            message: "¿Le gustaría hablar con un agente?<br><br>Hola es un segundo texto",
            name: "Fractalia",
            buttons: [{label: "Deseo hablar con un agente", value: "es"}]
          },
          keepHistory: true,
          canSendFiles: true,
          hasSurvey: true,
          noConfirmTerminate: false,
          color: '#323E48',
          phone: {},
          links: [],
          lang: currentLanguage,
          footer: '',
          fields: [],
          user: {
            firstName: userName,
            email: `${userName.toLowerCase().replace(/\s+/g, '.')}@fractalia.es`,
            number1: "+55112365487",
            lang: currentLanguage,
            campaign: "CHAT_N1_ISC",
            Question: "soporte_iot",
            Acuerdo: "Home Digital",
            JiraLicense: `${userName.toLowerCase().replace(/\s+/g, '.')}@fractalia.es-FRA`,
            Url_Acuerdo: "https://fractalia.smartsupport.devonlineassist.me"
          },
          hideField: []
        });

        if (typeof SigmaChat.showChat === 'function') {
          SigmaChat.showChat();
        }

        if (typeof SigmaChat.sendSilentMessage === 'function') {
          SigmaChat.sendSilentMessage("Nombre prueba:\n\nenlace https://google.com");
        }
      } catch (error) {
        console.error('Error al inicializar SigmaChat:', error);
      }
    }

    window.openChat = openChat;

    // Función global para obtener el estado actual
    window.getCurrentState = () => ({
      service: currentService,
      language: currentLanguage,
      userId: currentUserId,
      userName: document.getElementById('userId')?.options[document.getElementById('userId').selectedIndex]?.text
    });

    // Event listeners
    window.handleServiceChange = (service) => {
      currentService = service;
      if (typeof window !== 'undefined') {
        localStorage.setItem('selectedServiceId', service.id);
      }
      document.dispatchEvent(new CustomEvent('serviceChange', { detail: service }));
    };

    window.handleLanguageChange = (language) => {
      currentLanguage = language;
      if (typeof window !== 'undefined') {
        localStorage.setItem('selectedLanguage', language);
      }
      document.dispatchEvent(new CustomEvent('languageChange', { detail: language }));
    };
  </script>
</Layout>
